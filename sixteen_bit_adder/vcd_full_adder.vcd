$date
  Fri Nov 18 12:52:20 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module my_full_adder_tb $end
$var reg 1 ! a $end
$var reg 1 " b $end
$var reg 1 # cin $end
$var reg 1 $ cout1 $end
$var reg 1 % cout2 $end
$var reg 1 & cout3 $end
$var reg 1 ' cout4 $end
$var reg 1 ( cout5 $end
$var reg 1 ) cout6 $end
$var reg 1 * cout7 $end
$var reg 1 + sum1 $end
$var reg 1 , sum2 $end
$var reg 1 - sum3 $end
$var reg 1 . sum4 $end
$var reg 1 / sum5 $end
$var reg 1 0 sum6 $end
$var reg 1 1 sum7 $end
$var reg 3 2 adder_input[2:0] $end
$var integer 32 3 int_a $end
$var integer 32 4 int_b $end
$var integer 32 5 int_s $end
$scope module rtl $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 sum $end
$var reg 1 : cout $end
$var reg 1 ; and_1 $end
$var reg 1 < and_2 $end
$var reg 1 = xor_1 $end
$upscope $end
$scope module logic $end
$var reg 1 > a $end
$var reg 1 ? b $end
$var reg 1 @ cin $end
$var reg 1 A sum $end
$var reg 1 B cout $end
$upscope $end
$scope module behav $end
$var reg 1 C a $end
$var reg 1 D b $end
$var reg 1 E cin $end
$var reg 1 F sum $end
$var reg 1 G cout $end
$var integer 32 H a_n $end
$var integer 32 I b_n $end
$var integer 32 J cin_n $end
$var integer 32 K result_n $end
$var reg 2 L result[1:0] $end
$upscope $end
$scope module struct $end
$var reg 1 M a $end
$var reg 1 N b $end
$var reg 1 O cin $end
$var reg 1 P sum $end
$var reg 1 Q cout $end
$var reg 1 R sum_0 $end
$var reg 1 S carry_0 $end
$var reg 1 T carry_1 $end
$scope module half_adder_1 $end
$var reg 1 U a $end
$var reg 1 V b $end
$var reg 1 W h $end
$var reg 1 X l $end
$scope module and_1 $end
$var reg 1 Y a $end
$var reg 1 Z b $end
$var reg 1 [ y $end
$upscope $end
$scope module xor_1 $end
$var reg 1 \ a $end
$var reg 1 ] b $end
$var reg 1 ^ y $end
$upscope $end
$upscope $end
$scope module half_adder_2 $end
$var reg 1 _ a $end
$var reg 1 ` b $end
$var reg 1 a h $end
$var reg 1 b l $end
$scope module and_1 $end
$var reg 1 c a $end
$var reg 1 d b $end
$var reg 1 e y $end
$upscope $end
$scope module xor_1 $end
$var reg 1 f a $end
$var reg 1 g b $end
$var reg 1 h y $end
$upscope $end
$upscope $end
$scope module or_1 $end
$var reg 1 i a $end
$var reg 1 j b $end
$var reg 1 k y $end
$upscope $end
$upscope $end
$scope module struct2 $end
$var reg 1 l a $end
$var reg 1 m b $end
$var reg 1 n cin $end
$var reg 1 o sum $end
$var reg 1 p cout $end
$var reg 1 q aux $end
$scope module majority_1 $end
$var reg 3 r m_input[2:0] $end
$var reg 1 s majority_bit $end
$var reg 1 t and1 $end
$var reg 1 u and2 $end
$var reg 1 v and3 $end
$var reg 1 w or1 $end
$scope module and_1 $end
$var reg 1 x a $end
$var reg 1 y b $end
$var reg 1 z y $end
$upscope $end
$scope module and_2 $end
$var reg 1 { a $end
$var reg 1 | b $end
$var reg 1 } y $end
$upscope $end
$scope module and_3 $end
$var reg 1 !" a $end
$var reg 1 "" b $end
$var reg 1 #" y $end
$upscope $end
$scope module or_1 $end
$var reg 1 $" a $end
$var reg 1 %" b $end
$var reg 1 &" y $end
$upscope $end
$scope module or_2 $end
$var reg 1 '" a $end
$var reg 1 (" b $end
$var reg 1 )" y $end
$upscope $end
$upscope $end
$scope module xor_1 $end
$var reg 1 *" a $end
$var reg 1 +" b $end
$var reg 1 ," y $end
$upscope $end
$scope module xor_2 $end
$var reg 1 -" a $end
$var reg 1 ." b $end
$var reg 1 /" y $end
$upscope $end
$upscope $end
$scope module hybrid $end
$var reg 1 0" a $end
$var reg 1 1" b $end
$var reg 1 2" cin $end
$var reg 1 3" sum $end
$var reg 1 4" cout $end
$var reg 1 5" sum_0 $end
$var reg 1 6" carry_0 $end
$var reg 1 7" carry_1 $end
$scope module half_adder_1 $end
$var reg 1 8" a $end
$var reg 1 9" b $end
$var reg 1 :" h $end
$var reg 1 ;" l $end
$upscope $end
$scope module half_adder_2 $end
$var reg 1 <" a $end
$var reg 1 =" b $end
$var reg 1 >" h $end
$var reg 1 ?" l $end
$upscope $end
$upscope $end
$scope module hybrid2 $end
$var reg 1 @" a $end
$var reg 1 A" b $end
$var reg 1 B" cin $end
$var reg 1 C" sum $end
$var reg 1 D" cout $end
$scope module majority_1 $end
$var reg 3 E" m_input[2:0] $end
$var reg 1 F" majority_bit $end
$var reg 1 G" and1 $end
$var reg 1 H" and2 $end
$var reg 1 I" and3 $end
$var reg 1 J" or1 $end
$scope module and_1 $end
$var reg 1 K" a $end
$var reg 1 L" b $end
$var reg 1 M" y $end
$upscope $end
$scope module and_2 $end
$var reg 1 N" a $end
$var reg 1 O" b $end
$var reg 1 P" y $end
$upscope $end
$scope module and_3 $end
$var reg 1 Q" a $end
$var reg 1 R" b $end
$var reg 1 S" y $end
$upscope $end
$scope module or_1 $end
$var reg 1 T" a $end
$var reg 1 U" b $end
$var reg 1 V" y $end
$upscope $end
$scope module or_2 $end
$var reg 1 W" a $end
$var reg 1 X" b $end
$var reg 1 Y" y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
b000 2
b10000000000000000000000000000000 3
b10000000000000000000000000000000 4
b10000000000000000000000000000000 5
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
b0 H
b0 I
b0 J
b0 K
b00 L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
b000 r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
b000 E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
#10000000
1#
1+
1,
1-
1.
1/
10
11
b001 2
18
19
1@
1A
1E
1F
b1 J
b1 K
b01 L
1O
1P
1_
1b
1c
1f
1h
1n
1o
b100 r
1x
1!"
1."
1/"
12"
13"
1<"
1?"
1B"
1C"
b100 E"
1K"
1Q"
#20000000
1"
0#
1+
1.
1/
10
b010 2
17
08
19
1=
1?
0@
1D
0E
b1 I
b0 J
1N
0O
1P
1R
1V
1X
1Z
1]
1^
0_
1`
1b
0c
1d
0f
1g
1h
1m
0n
1o
1q
b010 r
0x
1y
1{
0!"
1+"
1,"
1-"
0."
1/"
11"
02"
13"
15"
19"
1;"
0<"
1="
1?"
1A"
0B"
b010 E"
0K"
1L"
1N"
0Q"
#30000000
1#
1$
1%
1&
1'
1(
1)
1*
0+
0,
0-
0.
0/
00
01
b011 2
18
09
1:
1<
1@
0A
1B
1E
0F
1G
b1 J
b10 K
b10 L
1O
0P
1Q
1T
1_
1a
0b
1c
1e
1f
0h
1j
1k
1n
0o
1p
b110 r
1s
1t
1w
1x
1z
1!"
1$"
1&"
1'"
1)"
1."
0/"
12"
03"
14"
17"
1<"
1>"
0?"
1B"
0C"
1D"
b110 E"
1F"
1G"
1J"
1K"
1M"
1Q"
1T"
1V"
1W"
1Y"
#40000000
1!
0"
0#
0$
0%
0&
0'
0(
0)
0*
1+
1,
1-
1.
1/
10
11
b100 2
16
07
08
19
0:
0<
1>
0?
0@
1A
0B
1C
0D
0E
1F
0G
b1 H
b0 I
b0 J
b1 K
b01 L
1M
0N
0O
1P
0Q
0T
1U
0V
1Y
0Z
1\
0]
0_
0a
1b
0c
0e
0f
1h
0j
0k
1l
0m
0n
1o
0p
b001 r
0s
0t
0w
0x
0y
0z
0{
1|
0!"
1""
0$"
0&"
0'"
0)"
1*"
0+"
0."
1/"
10"
01"
02"
13"
04"
07"
18"
09"
0<"
0>"
1?"
1@"
0A"
0B"
1C"
0D"
b001 E"
0F"
0G"
0J"
0K"
0L"
0M"
0N"
1O"
0Q"
1R"
0T"
0V"
0W"
0Y"
#50000000
1#
1$
1%
1&
1'
1(
1)
1*
0+
0,
0-
0.
0/
00
01
b101 2
18
09
1:
1<
1@
0A
1B
1E
0F
1G
b1 J
b10 K
b10 L
1O
0P
1Q
1T
1_
1a
0b
1c
1e
1f
0h
1j
1k
1n
0o
1p
b101 r
1s
1v
1x
1!"
1#"
1("
1)"
1."
0/"
12"
03"
14"
17"
1<"
1>"
0?"
1B"
0C"
1D"
b101 E"
1F"
1I"
1K"
1Q"
1S"
1X"
1Y"
#60000000
1"
0#
1(
1*
0+
0.
0/
00
b110 2
17
08
09
1;
0<
0=
1?
0@
1D
0E
b1 I
b0 J
1N
0O
0P
0R
1S
0T
1V
1W
0X
1Z
1[
1]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
1i
0j
1m
0n
0o
1p
0q
b011 r
1s
1u
0v
1w
0x
1y
1{
1}
0!"
0#"
1%"
1&"
1'"
0("
1)"
1+"
0,"
0-"
0."
0/"
11"
02"
03"
05"
16"
07"
19"
1:"
0;"
0<"
0="
0>"
0?"
1A"
0B"
1D"
b011 E"
1F"
1H"
0I"
1J"
0K"
1L"
1N"
1P"
0Q"
0S"
1U"
1V"
1W"
0X"
1Y"
#70000000
1#
1+
1,
1-
1.
1/
10
11
b111 2
18
19
1@
1A
1E
1F
b1 J
b11 K
b11 L
1O
1P
1_
1b
1c
1f
1h
1n
1o
b111 r
1t
1v
1x
1z
1!"
1#"
1$"
1("
1."
1/"
12"
13"
1<"
1?"
1B"
1C"
b111 E"
1G"
1I"
1K"
1M"
1Q"
1S"
1T"
1X"
#80000000
